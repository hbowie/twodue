/*
 * PrefsWindow.java
 *
 * Created on August 5, 2007, 8:58 AM
 */

package com.powersurgepub.twodue;

  import com.powersurgepub.psfiles.*;
  import com.powersurgepub.psdatalib.ui.*;
  import com.powersurgepub.psutils.*;
  import com.powersurgepub.twodue.data.*;
  import com.powersurgepub.twodue.disk.*;
  import com.powersurgepub.xos2.*;
  import javax.swing.*;

/**
 *
 * @author  hbowie
 */
public class PrefsWindow extends javax.swing.JFrame {
  
  private TwoDueCommon      td;
  
  private XOS               xos = XOS.getShared();
  
  private ProgramVersion    programVersion;
  
  private boolean           setupComplete = false;
  
  private CommonPrefs       commonPrefs;
  private DisplayPrefs      displayPrefs;
  private ViewPrefs         viewPrefs;
  private FilePrefs       backupPrefs;
  
  /** Creates new form PrefsWindow */
  public PrefsWindow(TwoDueCommon td) {
    this.td = td;
    programVersion = ProgramVersion.getShared(td.frame);
    initComponents();
    
    this.setTitle (Home.getShared().getProgramName() + " Preferences");
    this.setBounds (100, 100, 600, 540);
    
    commonPrefs = CommonPrefs.getShared();
    prefsTabs.addTab("General", commonPrefs);
    
    displayPrefs = new DisplayPrefs (td, this);
    prefsTabs.addTab ("Display", displayPrefs);
    
    viewPrefs = new ViewPrefs (td, this);
    prefsTabs.addTab ("Views", viewPrefs);
    
    backupPrefs = new FilePrefs (td);
    prefsTabs.addTab ("Backups", backupPrefs);
    
    setupComplete = true;
  }
  
  public CommonPrefs getCommonPrefs() {
    return commonPrefs;
  }
  
  public ViewPrefs getViewPrefs () {
    return viewPrefs;
  }
  
  public FilePrefs getBackupPrefs () {
    return backupPrefs;
  }
  
  /**
    Prepares the tab for processing of newly opened file.
   
    @param store Disk Store object for the file.
   */
  public void filePrep (TwoDueDiskStore store) {
    viewPrefs.filePrep (store);
  }
  
  public void updateViewFromForm () {
    viewPrefs.updateViewFromForm();
  }
  
  public void setOptions (ItemComparator comp) {
    viewPrefs.setOptions (comp);
  }
  
  public void setMenu (JMenu viewMenu) {
    viewPrefs.setMenu (viewMenu);
  }
  
  public int getAutoSave () {
    return commonPrefs.getAutoSave();
  }
  
  public void setAutoSave (int autoSaveInterval) {
    commonPrefs.setAutoSave (autoSaveInterval);
  } // end method
  
  public void displayItem() {
  }  
  
  public boolean modIfChanged() {
    return false;
  }  
  
  public void switchTabs () {
    
  }
  
  public void savePrefs() {
    commonPrefs.savePrefs();
    backupPrefs.savePrefs();
  }
  
  public void handleQuit() {
    // backupPrefs.handleQuit();
  }
  
  private void warnRelaunch() {
    JOptionPane.showMessageDialog (
        td.tabs1,
        "You may need to Quit and relaunch "
            + XOS.getShared().getProgramName()
            + " for your preferences to take effect.",
        "Relaunch Warning",
        JOptionPane.WARNING_MESSAGE);
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents() {
    prefsTabs = new javax.swing.JTabbedPane();

    getContentPane().add(prefsTabs, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTabbedPane prefsTabs;
  // End of variables declaration//GEN-END:variables
  
}
